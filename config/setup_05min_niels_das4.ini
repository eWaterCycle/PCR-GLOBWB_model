[globalOptions]

# Set the input directory map in an absolute path. 
# - The input forcing and parameter directories will be relative to this.
inputDir = /var/scratch/niels/hydroworld/

# Map of clone (must be provided in PCRaster maps)
# - Spatial resolution and coverage are based on this map:
#~ cloneMap = CLONEMAPFILES
#cloneMap = others/Mississippi/Mississippi05min.clone.map

cloneMap = /var/scratch/niels/hydroworld/PCRGLOBWB20/input5min/routing/clone_05min.map
landmask = /var/scratch/niels/hydroworld/PCRGLOBWB20/input5min/routing/landmask_05min.map

# The area/landmask of interest:
#~ landmask = LANDMASKFILES
#landmask = None
# If None, area/landmask is limited for cells with ldd value. 

# Set the output directory in an absolute path.
#~ outputDir = OUTPUTDIRECTORY
outputDir = /var/scratch/niels/output/test_Global_settings_completed

# netcdf attributes for output files:
institution = Department of Physical Geography, Utrecht University
title       = PCR-GLOBWB output
description = test version (by Edwin H. Sutanudjaja) 

startTime = 2010-01-01
endTime   = 2010-10-31
# Format: YYYY-MM-DD
# The model runs on the daily time step.

# spinning up options
maxSpinUpsInYears = 0
minConvForTotlSto = 0.5
minConvForSoilSto = 0.5
minConvForGwatSto = 0.5
minConvForChanSto = 0.5

[meteoOptions]

# Set the forcing temperature and precipitation files (relative to inputDir)
precipitationNC = forcing/GPCC/edwin_gpcc_merged_1958_to_2010/gpcc-v6_era-40-era-interim_daily_precipitation_1958_to_2010.nc
temperatureNC   = forcing/CRU-TS3.21/merged_1958_to_2010/CRU-TS3.21_ERA-40_ERA-Interim_daily_temperature_1958_to_2010.nc

# Method to calculate referencePotETP (reference potential evaporation+transpiration)
referenceETPotMethod = Hamon
# options are "Hamon" and "Input" ; If "Input", the netcdf input file must be given:
refETPotFileNC  = None

[meteoDownscalingOptions]

downscalePrecipitation  = None
downscaleTemperature    = None
downscaleReferenceETPot = None

# downscaling (based on the digital elevation model):
# The downscaling will be performed by providing the "cellIds" (meteoDownscaleIds) of lower resolution cells. 
meteoDownscaleIds = None
highResolutionDEM = None

# lapse rates:
temperLapseRateNC = None
precipLapseRateNC = None

# downscaling criteria
temperatCorrelNC  = None
precipitCorrelNC  = None 

# windows length (unit: arc-degree) for smoothing/averaging forcing data (not recommended):
smoothingWindowsLength = 0

[landSurfaceOptions]
debugWaterBalance = True

numberOfUpperSoilLayers = 3

topographyNC      = PCRGLOBWB20/input30min/landSurface/topo/topoProperties.nc
soilPropertiesNC  = PCRGLOBWB20/input30min/landSurface/soil/soilProperties.nc

includeIrrigation = False
# if True, there are four land cover types defined: forest,grassland,irrPaddy,irrNonPaddy
# if False, two (natural) land cover types defined: forest,grassland

# netcdf time series for historical expansion of irrigation areas (unit: hectares). 
# Note: The resolution of this map must be consisten with the resolution of cellArea. 
historicalIrrigationArea = None
#historicalIrrigationArea = PCRGLOBWB20/input30min/landSurface/waterDemand/irrigated_areas/irrigationArea30ArcMin.nc

includeDomesticWaterDemand = False
includeIndustryWaterDemand = False

domesticWaterDemandFile = PCRGLOBWB20/input30min/landSurface/waterDemand/domesticWaterDemand30ArcMin.nc
industryWaterDemandFile = PCRGLOBWB20/input30min/landSurface/waterDemand/industryWaterDemand30ArcMin.nc

limitAbstraction = False

# zone IDs (scale) at which ground- surface-water allocation is performed  
#~ allocationSegmentsForGroundSurfaceWater = None
allocationSegmentsForGroundSurfaceWater = others/irrigationZones/one_arc_degree/uniqueIds60min.nom.map

[forestOptions]
name = forest
debugWaterBalance = True

# snow module properties
snowModuleType      =  Simple
freezingT           = -0.0
degreeDayFactor     =  0.0025
snowWaterHoldingCap =  0.1
refreezingCoeff     =  0.05

# other paramater values
minTopWaterLayer = 0.0
minCropKC        = 0.2
minInterceptCap  = 0.0002

#~ landCoverMapsNC = PCRGLOBWB20/input5min/landCover/forest/forestProperties5ArcMin.nc
landCoverMapsNC  = None
# If NC file is not provided, we have to provide the following pcraster maps:
fracVegCover     = PCRGLOBWB20/input5min/landCover/forest/vegf_tall.map
minSoilDepthFrac = PCRGLOBWB20/input30min/landCover/forest/minf_tall_permafrost.map
maxSoilDepthFrac = PCRGLOBWB20/input30min/landCover/forest/maxf_tall.map
rootFraction1    = PCRGLOBWB20/input5min/landCover/forest/rfrac1_tall.map
rootFraction2    = PCRGLOBWB20/input5min/landCover/forest/rfrac2_tall.map	
maxRootDepth     = PCRGLOBWB20/input5min/landCover/forest/maxrootdepth_tall.map	

# Parameters for the Arno's scheme:
arnoBeta = None
# If arnoBeta is defined, the soil water capacity distribution is based on this.
# If arnoBeta is NOT defined, maxSoilDepthFrac must be defined such that arnoBeta will be calculated based on maxSoilDepthFrac and minSoilDepthFrac.

cropCoefficientNC = PCRGLOBWB20/input5min/landCover/forest/cropCoefficientForest.nc
interceptCapNC    = PCRGLOBWB20/input5min/landCover/forest/interceptCapInputForest.nc
coverFractionNC   = PCRGLOBWB20/input5min/landCover/forest/coverFractionInputForest.nc

# initial conditions:
interceptStorIni = /var/scratch/niels/initial_condition_based_natural_run/interceptStor_forest_2010-12-31.map
snowCoverSWEIni  = /var/scratch/niels/initial_condition_based_natural_run/snowCoverSWE_forest_2010-12-31.map
snowFreeWaterIni = /var/scratch/niels/initial_condition_based_natural_run/snowFreeWater_forest_2010-12-31.map
topWaterLayerIni = /var/scratch/niels/initial_condition_based_natural_run/topWaterLayer_forest_2010-12-31.map
storUppIni       = /var/scratch/niels/initial_condition_based_natural_run/storUpp_forest_2010-12-31.map
storLowIni       = /var/scratch/niels/initial_condition_based_natural_run/storLow_forest_2010-12-31.map
interflowIni     = /var/scratch/niels/initial_condition_based_natural_run/interflow_forest_2010-12-31.map
storUpp000005Ini = /var/scratch/niels/initial_condition_based_natural_run/storUpp_forest_2010-12-31.map
storUpp005030Ini = /var/scratch/niels/initial_condition_based_natural_run/storUpp_forest_2010-12-31.map
storLow030150Ini = /var/scratch/niels/initial_condition_based_natural_run/storLow_forest_2010-12-31.map

[grasslandOptions]
name = grassland
debugWaterBalance = True

# snow module properties
snowModuleType      =  Simple
freezingT           = -0.0
degreeDayFactor     =  0.0025
snowWaterHoldingCap =  0.1
refreezingCoeff     =  0.05

# other paramater values
minTopWaterLayer = 0.0
minCropKC        = 0.2
minInterceptCap  = 0.0002

#~ landCoverMapsNC = PCRGLOBWB20/input5min/landCover/grassland/grasslandProperties5ArcMin.nc
landCoverMapsNC  = None
# If NC file is not provided, we have to provide the following values:
fracVegCover     = PCRGLOBWB20/input5min/landCover/grassland/vegf_short.map
minSoilDepthFrac = PCRGLOBWB20/input30min/landCover/grassland/minf_short_permafrost.map
maxSoilDepthFrac = PCRGLOBWB20/input30min/landCover/grassland/maxf_short.map
rootFraction1    = PCRGLOBWB20/input5min/landCover/grassland/rfrac1_short.map
rootFraction2    = PCRGLOBWB20/input5min/landCover/grassland/rfrac2_short.map	
maxRootDepth     = PCRGLOBWB20/input5min/landCover/grassland/maxrootdepth_short.map	
#
# Parameters for the Arno's scheme:
arnoBeta = None
# If arnoBeta is defined, the soil water capacity distribution is based on this.
# If arnoBeta is NOT defined, maxSoilDepthFrac must be defined such that arnoBeta will be calculated based on maxSoilDepthFrac and minSoilDepthFrac.

cropCoefficientNC = PCRGLOBWB20/input5min/landCover/grassland/cropCoefficientGrassland.nc
interceptCapNC    = PCRGLOBWB20/input5min/landCover/grassland/interceptCapInputGrassland.nc
coverFractionNC   = PCRGLOBWB20/input5min/landCover/grassland/coverFractionInputGrassland.nc

# initial conditions:
interceptStorIni = /var/scratch/niels/initial_condition_based_natural_run/interceptStor_grassland_2010-12-31.map
snowCoverSWEIni  = /var/scratch/niels/initial_condition_based_natural_run/snowCoverSWE_grassland_2010-12-31.map
snowFreeWaterIni = /var/scratch/niels/initial_condition_based_natural_run/snowFreeWater_grassland_2010-12-31.map
topWaterLayerIni = /var/scratch/niels/initial_condition_based_natural_run/topWaterLayer_grassland_2010-12-31.map
storUppIni       = /var/scratch/niels/initial_condition_based_natural_run/storUpp_grassland_2010-12-31.map
storLowIni       = /var/scratch/niels/initial_condition_based_natural_run/storLow_grassland_2010-12-31.map
interflowIni     = /var/scratch/niels/initial_condition_based_natural_run/interflow_grassland_2010-12-31.map
storUpp000005Ini = /var/scratch/niels/initial_condition_based_natural_run/storUpp_grassland_2010-12-31.map
storUpp005030Ini = /var/scratch/niels/initial_condition_based_natural_run/storUpp_grassland_2010-12-31.map
storLow030150Ini = /var/scratch/niels/initial_condition_based_natural_run/storLow_grassland_2010-12-31.map

[irrPaddyOptions]
name = irrPaddy
debugWaterBalance = True

# snow module properties
snowModuleType      =  Simple
freezingT           = -0.0
degreeDayFactor     =  0.0025
snowWaterHoldingCap =  0.1
refreezingCoeff     =  0.05
#
landCoverMapsNC  = None
# If NC file is not provided, we have to provide the following values:
fracVegCover     = PCRGLOBWB20/input5min/landCover/irrigation/fractionPaddy.map
minSoilDepthFrac = PCRGLOBWB20/input30min/landCover/irrPaddy/minf_paddy_permafrost.map
maxSoilDepthFrac = PCRGLOBWB20/input30min/landCover/irrPaddy/maxf_paddy.map
rootFraction1    = PCRGLOBWB20/input30min/landCover/irrPaddy/rfrac1_paddy.map
rootFraction2    = PCRGLOBWB20/input30min/landCover/irrPaddy/rfrac2_paddy.map
maxRootDepth     = 0.5
#
# Parameters for the Arno's scheme:
arnoBeta = None
# If arnoBeta is defined, the soil water capacity distribution is based on this.
# If arnoBeta is NOT defined, maxSoilDepthFrac must be defined such that arnoBeta will be calculated based on maxSoilDepthFrac and minSoilDepthFrac.
#
# other paramater values
minTopWaterLayer = 0.05
minCropKC        = 0.2
minInterceptCap  = 0.0002
cropDeplFactor   = 0.2

cropCoefficientNC = PCRGLOBWB20/input30min/landCover/irrPaddy/Global_CropCoefficientKc-IrrPaddy_30min.nc

# initial conditions:
interceptStorIni = 0.0
snowCoverSWEIni  = 0.0
snowFreeWaterIni = 0.0
topWaterLayerIni = 0.0

storUppIni       = 0.0
storLowIni       = 0.0
interflowIni     = 0.0


[irrNonPaddyOptions]
name = irrNonPaddy
debugWaterBalance = True

# snow module properties
snowModuleType      =  Simple
freezingT           = -0.0
degreeDayFactor     =  0.0025
snowWaterHoldingCap =  0.1
refreezingCoeff     =  0.05
#
landCoverMapsNC  = None
# If NC file is not provided, we have to provide the following values:
fracVegCover     = PCRGLOBWB20/input5min/landCover/irrigation/fractionNonPaddy.map
minSoilDepthFrac = PCRGLOBWB20/input30min/landCover/irrNonPaddy/minf_nonpaddy_permafrost.map
maxSoilDepthFrac = PCRGLOBWB20/input30min/landCover/irrNonPaddy/maxf_nonpaddy.map
rootFraction1    = PCRGLOBWB20/input30min/landCover/irrNonPaddy/rfrac1_nonpaddy.map
rootFraction2    = PCRGLOBWB20/input30min/landCover/irrNonPaddy/rfrac2_nonpaddy.map
maxRootDepth     = 1.0
#
# Parameters for the Arno's scheme:
arnoBeta = None
# If arnoBeta is defined, the soil water capacity distribution is based on this.
# If arnoBeta is NOT defined, maxSoilDepthFrac must be defined such that arnoBeta will be calculated based on maxSoilDepthFrac and minSoilDepthFrac.
#
# other paramater values
minTopWaterLayer = 0.0
minCropKC        = 0.2
minInterceptCap  = 0.0002
cropDeplFactor   = 0.5

cropCoefficientNC = PCRGLOBWB20/input30min/landCover/irrNonPaddy/Global_CropCoefficientKc-IrrNonPaddy_30min.nc

# initial conditions:
interceptStorIni = 0.0
snowCoverSWEIni  = 0.0
snowFreeWaterIni = 0.0
topWaterLayerIni = 0.0
storUppIni       = 0.0
storLowIni       = 0.0
interflowIni     = 0.0

[groundwaterOptions]
debugWaterBalance = True

groundwaterPropertiesNC = PCRGLOBWB20/input5min/groundwater/groundwaterProperties5ArcMin.nc

# minimum value for groundwater recession coefficient (day-1)
minRecessionCoeff = 2.5e-4

# initial condition:
storGroundwaterIni = /var/scratch/niels/initial_condition_based_natural_run/storGroundwater_2010-12-31.map
storGroundwaterFossilIni = /var/scratch/niels/initial_condition_based_natural_run/storGroundwaterFossil_2010-12-31.map
avgTotalGroundwaterAbstractionIni = /var/scratch/niels/initial_condition_based_natural_run/avgTotalGroundwaterAbstraction_2010-12-31.map

[routingOptions]
debugWaterBalance = True

lddMap      = PCRGLOBWB20/input5min/routing/lddsound_05min.map
cellAreaMap = PCRGLOBWB20/input5min/routing/cellsize05min.correct.map
gradient    = PCRGLOBWB20/input5min/routing/slope05min.map

# manning coefficient
manningsN   = 0.04

# constant channel width (optional)
constantChannelWidth = None

# minimum channel width (optional)
minimumChannelWidth  = None

#routingMethod = kinematicWave
routingMethod = accuTravelTime
# Options are kinematicWave, simplifiedKinematicWave and accuTravelTime

# option for maximum length of a sub time step in seconds (optional and only used if kinematicWave is used)
# - Note that too long sub time step may create water balance errors.
# - Default values: 3600 seconds for 30 arcmin ; 720 seconds for 5 arcmin
#~ maxiumLengthOfSubTimeStep = 3600.
maxiumLengthOfSubTimeStep = 720.

# lake and reservoir parameters
waterBodyInputNC = PCRGLOBWB20/input30min/routing/reservoirs/fromRensJune2013/reservoirparameterization/waterBodies30min.nc
onlyNaturalWaterBodies = False

# composite crop factors for WaterBodies: 
cropCoefficientWaterNC = PCRGLOBWB20/input30min/routing/cropCoefficientForOpenWater.nc
minCropWaterKC         = 0.20

# number of days (timesteps) that have been performed for spinning up initial conditions in the routing module (i.e. channelStorageIni, avgDischargeLongIni, avgDischargeShortIni, etc.)
timestepsToAvgDischargeIni     = /var/scratch/niels/initial_condition_based_natural_run/timestepsToAvgDischarge_2010-12-31.map

# Note that: 
# - maximum number of days (timesteps) to calculate long term average flow values (default: 5 years = 5 * 365 days = 1825)
# - maximum number of days (timesteps) to calculate short term average values (default: 1 month = 1 * 30 days = 30)

# initial conditions:
waterBodyStorageIni            = /var/scratch/niels/initial_condition_based_natural_run/waterBodyStorage_2010-12-31.map
channelStorageIni              = /var/scratch/niels/initial_condition_based_natural_run/channelStorage_2010-12-31.map
readAvlChannelStorageIni       = /var/scratch/niels/initial_condition_based_natural_run/readAvlChannelStorage_2010-12-31.map
avgDischargeLongIni            = /var/scratch/niels/initial_condition_based_natural_run/avgDischargeLong_2010-12-31.map
m2tDischargeLongIni            = /var/scratch/niels/initial_condition_based_natural_run/m2tDischargeLong_2010-12-31.map
avgBaseflowLongIni             = /var/scratch/niels/initial_condition_based_natural_run/avgBaseflowLong_2010-12-31.map
riverbedExchangeIni            = /var/scratch/niels/initial_condition_based_natural_run/riverbedExchange_2010-12-31.map
avgLakeReservoirInflowShortIni = /var/scratch/niels/initial_condition_based_natural_run/avgLakeReservoirInflowShort_2010-12-31.map
avgLakeReservoirOutflowLongIni = /var/scratch/niels/initial_condition_based_natural_run/avgLakeReservoirOutflowLong_2010-12-31.map
#
# initial condition of sub-time step discharge (needed for estimating number of time steps in kinematic wave methods)
subDischargeIni                = /var/scratch/niels/initial_condition_based_natural_run/subDischarge_2010-12-31.map
#
# other initial conditions (optional):
avgDischargeShortIni           = /var/scratch/niels/initial_condition_based_natural_run/avgDischargeShort_2010-12-31.map

[reportingOptions]
# output files that will be written in the disk in netcdf files:
outDailyTotNC = discharge,satDegUppSurface
outMonthTotNC = None
outMonthAvgNC = totalWaterStorageThickness
outMonthEndNC = surfaceWaterStorage
outAnnuaTotNC = totalRunoff,runoff,waterBodyActEvaporation,totLandSurfaceActuaET,precipitation,referencePotET,totalLandSurfacePotET,gwRecharge,irrGrossDemand,nonIrrGrossDemand,totalGrossDemand,surfaceWaterAbstraction,nonFossilGroundWaterAbstraction,otherWaterSourceAbstraction,totalEvaporation
outAnnuaAvgNC = discharge
outAnnuaEndNC = None
