[globalOptions]

# Set the input directory map in an absolute path. 
# - The input forcing and parameter directories will be relative to this.
#~ inputDir = /var/scratch/niels/eWaterCycle/hydroworld/
inputDir = /projects/dfguu/data/hydroworld/

# Map of clone (must be provided in PCRaster maps)
# - Spatial resolution and coverage are based on this map:
#~ cloneMap = /var/scratch/niels/eWaterCycle/hydroworld/PCRGLOBWB20/input5min/routing/clone_05min.map
cloneMap = PCRGLOBWB20/input5min/routing/lddsound_05min.map

# The area/landmask of interest:
#~ landmask = LANDMASKFILES
# If None, area/landmask is limited for cells with ldd value. 
#~ landmask = /var/scratch/niels/eWaterCycle/hydroworld/PCRGLOBWB20/input5min/routing/landmask_05min.map
landmask = None

# Set the output directory in an absolute path.
#~ outputDir = OUTPUTDIRECTORY
outputDir = /projects/wtrcycle/users/edwinhs/test_for_ewatercycle/05arcmin/

# netcdf attributes for output files:
institution = Department of Physical Geography, Utrecht University
title       = PCR-GLOBWB output
description = test version (by Edwin H. Sutanudjaja) 

#~ startTime = STARTTIME
#~ endTime   = ENDTIME
startTime = 2015-02-25
endTime   = 2015-03-13
# Format: YYYY-MM-DD
# The model runs on the daily time step.

# spinning up options
maxSpinUpsInYears = 0
minConvForTotlSto = 0.5
minConvForSoilSto = 0.5
minConvForGwatSto = 0.5
minConvForChanSto = 0.5

[meteoOptions]

# Set the forcing temperature and precipitation files (relative to inputDir)
#~ precipitationNC = forcing/CRU-TS3.21/merged_1958_to_2010/CRU-TS3.21_ERA-40_ERA-Interim_daily_precipitation_1958_to_2010.nc
#~ temperatureNC   = forcing/CRU-TS3.21/merged_1958_to_2010/CRU-TS3.21_ERA-40_ERA-Interim_daily_temperature_1958_to_2010.nc
precipitationNC = /home/ndrost/forcing-example-edwin/30-out/forcingPrecipDailyOut.nc
temperatureNC   = /home/ndrost/forcing-example-edwin/30-out/forcingTempDailyOut.nc
#~ precipitationNC = PRECIPITATIONFILE
#~ temperatureNC   = TEMPERATUREFILE

# Method to calculate referencePotETP (reference potential evaporation+transpiration)
referenceETPotMethod = Hamon
# options are "Hamon" and "Input" ; If "Input", the netcdf input file must be given:
refETPotFileNC  = None

[landSurfaceOptions]
debugWaterBalance = True

numberOfUpperSoilLayers = 3

topographyNC      = PCRGLOBWB20/input5min/landSurface/topo/topoProperties5ArcMin.nc
soilPropertiesNC  = PCRGLOBWB20/input5min/landSurface/soil/v03Jul2013/soilProperties5ArcMin.nc

#~ includeIrrigation = True
includeIrrigation = False
# if True, there are four land cover types defined: forest,grassland,irrPaddy,irrNonPaddy
# if False, two (natural) land cover types defined: forest,grassland

# netcdf time series for historical expansion of irrigation areas (unit: hectares). 
# Note: The resolution of this map must be consisten with the resolution of cellArea. 
historicalIrrigationArea = None
#historicalIrrigationArea = PCRGLOBWB20/input30min/landSurface/waterDemand/irrigated_areas/irrigationArea30ArcMin.nc

includeDomesticWaterDemand = False
includeIndustryWaterDemand = False

domesticWaterDemandFile = None
industryWaterDemandFile = None

limitAbstraction = False

# zone IDs (scale) at which ground- surface-water allocation is performed  
allocationSegmentsForGroundSurfaceWater = None
#~ allocationSegmentsForGroundSurfaceWater = others/irrigationZones/one_arc_degree/uniqueIds60min.nom.map

[forestOptions]
name = forest
debugWaterBalance = True

# snow module properties
snowModuleType      =  Simple
freezingT           = -0.0
degreeDayFactor     =  0.0025
snowWaterHoldingCap =  0.1
refreezingCoeff     =  0.05

# other paramater values
minTopWaterLayer = 0.0
minCropKC        = 0.2
minInterceptCap  = 0.0002

#~ landCoverMapsNC = PCRGLOBWB20/input5min/landCover/forest/forestProperties5ArcMin.nc
landCoverMapsNC  = None
# If NC file is not provided, we have to provide the following pcraster maps:
fracVegCover     = PCRGLOBWB20/input5min/landCover/forest/vegf_tall.map
minSoilDepthFrac = PCRGLOBWB20/input30min/landCover/forest/minf_tall_permafrost.map
maxSoilDepthFrac = PCRGLOBWB20/input30min/landCover/forest/maxf_tall.map
rootFraction1    = PCRGLOBWB20/input5min/landCover/forest/rfrac1_tall.map
rootFraction2    = PCRGLOBWB20/input5min/landCover/forest/rfrac2_tall.map	
maxRootDepth     = PCRGLOBWB20/input5min/landCover/forest/maxrootdepth_tall.map	

# Parameters for the Arno's scheme:
arnoBeta = None
# If arnoBeta is defined, the soil water capacity distribution is based on this.
# If arnoBeta is NOT defined, maxSoilDepthFrac must be defined such that arnoBeta will be calculated based on maxSoilDepthFrac and minSoilDepthFrac.

cropCoefficientNC = PCRGLOBWB20/input5min/landCover_v05Jul2013/Global/netcdf/cropCoefficientForest.nc
interceptCapNC    = PCRGLOBWB20/input5min/landCover_v05Jul2013/Global/netcdf/interceptCapInputForest.nc
coverFractionNC   = PCRGLOBWB20/input5min/landCover_v05Jul2013/Global/netcdf/coverFractionInputForest.nc

# initial conditions:
interceptStorIni  = 0.0
snowCoverSWEIni   = 0.0
snowFreeWaterIni  = 0.0
topWaterLayerIni  = 0.0
interflowIni      = 0.0
storUpp000005Ini  = 0.0
storUpp005030Ini  = 0.0
storLow030150Ini  = 0.0
#
#~ interceptStorIni = INITIALCONDITIONSDIR/interceptStor_forest.map
#~ snowCoverSWEIni  = INITIALCONDITIONSDIR/snowCoverSWE_forest.map
#~ snowFreeWaterIni = INITIALCONDITIONSDIR/snowFreeWater_forest.map
#~ topWaterLayerIni = INITIALCONDITIONSDIR/topWaterLayer_forest.map
#~ interflowIni     = INITIALCONDITIONSDIR/interceptStor_forest.map
#~ storUpp000005Ini  = INITIALCONDITIONSDIR/storUpp000005_forest.map
#~ storUpp005030Ini  = INITIALCONDITIONSDIR/storUpp005030_forest.map
#~ storLow030150Ini  = INITIALCONDITIONSDIR/storLow030150_forest.map

[grasslandOptions]
name = grassland
debugWaterBalance = True

# snow module properties
snowModuleType      =  Simple
freezingT           = -0.0
degreeDayFactor     =  0.0025
snowWaterHoldingCap =  0.1
refreezingCoeff     =  0.05

# other paramater values
minTopWaterLayer = 0.0
minCropKC        = 0.2
minInterceptCap  = 0.0002

#~ landCoverMapsNC = PCRGLOBWB20/input5min/landCover/grassland/grasslandProperties5ArcMin.nc
landCoverMapsNC  = None
# If NC file is not provided, we have to provide the following values:
fracVegCover     = PCRGLOBWB20/input5min/landCover/grassland/vegf_short.map
minSoilDepthFrac = PCRGLOBWB20/input30min/landCover/grassland/minf_short_permafrost.map
maxSoilDepthFrac = PCRGLOBWB20/input30min/landCover/grassland/maxf_short.map
rootFraction1    = PCRGLOBWB20/input5min/landCover/grassland/rfrac1_short.map
rootFraction2    = PCRGLOBWB20/input5min/landCover/grassland/rfrac2_short.map	
maxRootDepth     = PCRGLOBWB20/input5min/landCover/grassland/maxrootdepth_short.map	
#
# Parameters for the Arno's scheme:
arnoBeta = None
# If arnoBeta is defined, the soil water capacity distribution is based on this.
# If arnoBeta is NOT defined, maxSoilDepthFrac must be defined such that arnoBeta will be calculated based on maxSoilDepthFrac and minSoilDepthFrac.

cropCoefficientNC = PCRGLOBWB20/input5min/landCover_v05Jul2013/Global/netcdf/cropCoefficientGrassland.nc
interceptCapNC    = PCRGLOBWB20/input5min/landCover_v05Jul2013/Global/netcdf/interceptCapInputGrassland.nc
coverFractionNC   = PCRGLOBWB20/input5min/landCover_v05Jul2013/Global/netcdf/coverFractionInputGrassland.nc

# initial conditions:
interceptStorIni  = 0.0
snowCoverSWEIni   = 0.0
snowFreeWaterIni  = 0.0
topWaterLayerIni  = 0.0
interflowIni      = 0.0
storUpp000005Ini  = 0.0
storUpp005030Ini  = 0.0
storLow030150Ini  = 0.0
#
#~ interceptStorIni  = INITIALCONDITIONSDIR/interceptStor_grassland.map
#~ snowCoverSWEIni   = INITIALCONDITIONSDIR/snowCoverSWE_grassland.map
#~ snowFreeWaterIni  = INITIALCONDITIONSDIR/snowFreeWater_grassland.map
#~ topWaterLayerIni  = INITIALCONDITIONSDIR/topWaterLayer_grassland.map
#~ interflowIni      = INITIALCONDITIONSDIR/interflow_grassland.map
#~ storUpp000005Ini  = INITIALCONDITIONSDIR/storUpp000005_grassland.map
#~ storUpp005030Ini  = INITIALCONDITIONSDIR/storUpp005030_grassland.map
#~ storLow030150Ini  = INITIALCONDITIONSDIR/storLow030150_grassland.map


[groundwaterOptions]
debugWaterBalance = False

groundwaterPropertiesNC = PCRGLOBWB20/input5min/groundwater/groundwaterProperties5ArcMin.nc

# minimum value for groundwater recession coefficient (day-1)
minRecessionCoeff = 2.5e-4

# initial condition:
#~ storGroundwaterIni = INITIALCONDITIONSDIR/storGroundwater_.map
#~ storGroundwaterFossilIni = INITIALCONDITIONSDIR/storGroundwaterFossil_.map
#~ avgTotalGroundwaterAbstractionIni = INITIALCONDITIONSDIR/avgTotalGroundwaterAbstractionIni_.map
#
storGroundwaterIni = 0.0
storGroundwaterFossilIni = 0.0
avgTotalGroundwaterAbstractionIni = 0.0

[routingOptions]
debugWaterBalance = True

lddMap      = PCRGLOBWB20/input5min/routing/lddsound_05min.map
cellAreaMap = PCRGLOBWB20/input5min/routing/cellsize05min.correct.map
gradient    = PCRGLOBWB20/input5min/routing/slope05min.map

# manning coefficient
manningsN   = 0.04

routingMethod = accuTravelTime
# Options are kinematicWave, simplifiedKinematicWave and accuTravelTime

# lake and reservoir parameters
waterBodyInputNC = PCRGLOBWB20/input5min/routing/reservoirs/waterBodiesFinal_version15Sept2013/maps/waterBodies5ArcMin.nc
onlyNaturalWaterBodies = False

# composite crop factors for WaterBodies: 
cropCoefficientWaterNC = PCRGLOBWB20/input30min/routing/cropCoefficientForOpenWater.nc
minCropWaterKC         = 0.20

# number of days (timesteps) that have been performed for spinning up initial conditions in the routing module (i.e. channelStorageIni, avgDischargeLongIni, avgDischargeShortIni, etc.)
#~ timestepsToAvgDischargeIni     = INITIALCONDITIONSDIR/timestepsToAvgDischarge_.map
timestepsToAvgDischargeIni     = 0.0

# Note that: 
# - maximum number of days (timesteps) to calculate long term average flow values (default: 5 years = 5 * 365 days = 1825)
# - maximum number of days (timesteps) to calculate short term average values (default: 1 month = 1 * 30 days = 30)

# initial conditions:
#~ waterBodyStorageIni            = INITIALCONDITIONSDIR/waterBodyStorage_.map
#~ channelStorageIni              = INITIALCONDITIONSDIR/channelStorage_.map
#~ readAvlChannelStorageIni       = INITIALCONDITIONSDIR/readAvlChannelStorage_.map
#~ avgDischargeLongIni            = INITIALCONDITIONSDIR/avgDischargeLong_.map
#~ m2tDischargeLongIni            = INITIALCONDITIONSDIR/m2tDischargeLong_.map
#~ avgBaseflowLongIni             = INITIALCONDITIONSDIR/avgBaseflowLong_.map
#~ riverbedExchangeIni            = INITIALCONDITIONSDIR/riverbedExchange_.map
#~ avgLakeReservoirInflowShortIni = INITIALCONDITIONSDIR/avgLakeReservoirInflowShort_.map
#~ avgLakeReservoirOutflowLongIni = INITIALCONDITIONSDIR/avgLakeReservoirOutflowLong_.map
#
waterBodyStorageIni            = 0.0
channelStorageIni              = 0.0
readAvlChannelStorageIni       = 0.0
avgDischargeLongIni            = 0.0
m2tDischargeLongIni            = 0.0
avgBaseflowLongIni             = 0.0
riverbedExchangeIni            = 0.0
avgLakeReservoirInflowShortIni = 0.0
avgLakeReservoirOutflowLongIni = 0.0


# initial condition of sub-time step discharge (needed for estimating number of time steps in kinematic wave methods)
subDischargeIni                = None
#
# other initial conditions (optional):
#~ avgDischargeShortIni           = INITIALCONDITIONSDIR/avgDischargeShort_.map
avgDischargeShortIni           = 0.0


[reportingOptions]
# output files that will be written in the disk in netcdf files:
outDailyTotNC = discharge,satDegUppSurface
outMonthTotNC = None
outMonthAvgNC = None
outMonthEndNC = None
outAnnuaTotNC = None
outAnnuaAvgNC = None
outAnnuaEndNC = None
